{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/config.ts","webpack:///external \"rxjs/internal/operators/tap\"","webpack:///./src/cache-manager.ts","webpack:///external \"rxjs/operators\"","webpack:///external \"path\"","webpack:///./src/server.ts","webpack:///external \"rxjs\"","webpack:///external \"rxjs/internal/observable/of\"","webpack:///external \"rxjs/internal/operators/filter\"","webpack:///./src/index.ts","webpack:///./src/routes.ts","webpack:///external \"fs\"","webpack:///external \"rimraf\"","webpack:///./src sync","webpack:///external \"express\"","webpack:///./src/engine.ts","webpack:///./src/cached-path.ts","webpack:///./src/queue-renderer.ts","webpack:///external \"phantom-crawler-server\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_path","config","assign","globalCacheDuration","totalBrowsers","default","join","process","cwd","Error","cachedDir","require","_fs","_interopRequireDefault","_rimraf","_config","cacheManager","CacheManager","clear","console","log","save","path","content","writeFileSync","this","getPath","JSON","stringify","cachedAt","Date","now","read","existsSync","parse","readFileSync","urlPath","replace","app","listen","_engine","Engine","start$","pipe","_tap","tap","_server","startServer","_cacheManager","req","res","info","json","__assign","success","webpackEmptyContext","e","code","keys","resolve","id","_rxjs","_of","_filter","_operators","_cachedPath","_this","interval","runningLoop","Observable","subscriber","previousRunTime","subscription","filter","flatMap","timeDifference","loop","first","subscribe","add","next","shareReplay","cachedPaths","map","CachedPath","combineLatest","pathCache","run","of","_queueRenderer","_a","cacheDuration","countDown","cacheDurationMs","shouldRun","queueRenderer","addToQueue","result","mapTo","getUrl","domain","_phantomCrawlerServer","QueueRenderer","queueSubject","BehaviorSubject","containerSubjects","registerContainers","cachedPathToSubject","WeakMap","subscriptions","Subscription","cachedPath","existingSubject","asObservable","jobCompleteSubject","AsyncSubject","set","concat","Array","from","browser$","browserManager","openNewInstance","job","forEach","containerSubject","registerContainerJobListener","debounceTime","container","index","tryCreateJob","distinctUntilKeyChanged","handleJob","length","queue","slice","shift","browser","activePage$","page","open","awaitPageLoad","getContent","subject","complete"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","import path from 'path';\nimport { CachedPathConfig } from './cached-path';\n\nexport interface Config {\n  domain : string;\n  cachedPaths : CachedPathConfig[];\n  cachedDir : string;\n  globalCacheDuration : number;\n  totalBrowsers : number;\n}\n\nconst DEFAULT_CONFIG : Partial<Config> = {\n  globalCacheDuration: 600,\n  totalBrowsers: 2,\n};\n\nexport const config : Config = Object.assign(\n  DEFAULT_CONFIG,\n  require(path.join(process.cwd(), './config.json'))\n);\n\nif (!config) {\n  throw new Error('Cannot find `config.json` file.');\n}\n\nif (!config.cachedDir) {\n  config.cachedDir = path.join(process.cwd(), './.cache');\n}\n","module.exports = require(\"rxjs/internal/operators/tap\");","import fs from 'fs';\nimport path from 'path';\nimport rimraf from 'rimraf';\nimport { config } from './config';\n\nexport interface CachedFileInfo {\n  path : string;\n  cachedAt : number;\n  content : string;\n}\n\nclass CacheManager {\n  clear () {\n    rimraf(config.cachedDir, () => {\n      console.log('Cleared existing cache');\n    });\n  }\n\n  save (path : string, content : string) {\n    fs.writeFileSync(this.getPath(path), JSON.stringify({\n      path, cachedAt: Date.now(), content,\n    }));\n  }\n\n  read (path : string) : undefined | CachedFileInfo {\n    if (!fs.existsSync(this.getPath(path))) {\n      return;\n    }\n\n    return JSON.parse(fs.readFileSync(this.getPath(path), 'utf-8'));\n  }\n\n  private getPath (urlPath : string) {\n    return path.join(config.cachedDir, urlPath.replace(/([\\s\\/])/gui, '\\\\$1'));\n  }\n}\n\nexport const cacheManager = new CacheManager();\n","module.exports = require(\"rxjs/operators\");","module.exports = require(\"path\");","import express from 'express';\n\nexport const app = express();\n\nexport function startServer() {\n  app.listen(1002, 'localhost', () => {\n    console.log('Listening on port 1002');\n  });\n}\n","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/internal/observable/of\");","module.exports = require(\"rxjs/internal/operators/filter\");","import './routes';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { Engine } from './engine';\nimport { startServer } from './server';\n\nexport function run () {\n  const engine = new Engine();\n\n  return engine.start$.pipe(\n    tap(() => startServer())\n  );\n}\n","import { Request, Response } from 'express';\nimport { cacheManager } from './cache-manager';\nimport { app } from './server';\n\napp.get('*', (req : Request, res : Response) => {\n  console.log(req.path);\n  const info = cacheManager.read(req.path);\n  res.json(info ? {\n    success: true,\n    ...info,\n  } : {\n    success: false,\n  });\n});\n","module.exports = require(\"fs\");","module.exports = require(\"rimraf\");","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 13;","module.exports = require(\"express\");","import { combineLatest, interval, Observable } from 'rxjs';\nimport { of } from 'rxjs/internal/observable/of';\nimport { filter } from 'rxjs/internal/operators/filter';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { first, flatMap, shareReplay } from 'rxjs/operators';\nimport { cacheManager } from './cache-manager';\nimport { CachedPath } from './cached-path';\nimport { config } from './config';\n\nexport class Engine {\n  private readonly interval = interval();\n  private readonly cachedPaths : CachedPath[];\n  private runningLoop       = false;\n  private previousRunTime : number;\n\n  constructor () {\n    this.cachedPaths = config.cachedPaths.map(config => new CachedPath(config));\n  }\n\n  readonly start$ = new Observable<void>(subscriber => {\n    cacheManager.clear();\n\n    this.previousRunTime = Date.now();\n    const subscription   = this.interval.pipe(\n      filter(() => !this.runningLoop),\n      tap(() => this.runningLoop = true),\n      flatMap(() => {\n        const now            = Date.now();\n        const timeDifference = now - this.previousRunTime;\n\n        this.previousRunTime = now;\n        return this.loop(timeDifference)\n          .pipe(\n            first(),\n          );\n      }),\n      tap(() => this.runningLoop = false),\n    )\n      .subscribe();\n\n    subscriber.add(subscription);\n    subscriber.next();\n  }).pipe(\n    shareReplay(1),\n  );\n\n  loop (timeDifference : number) : Observable<any> {\n    return combineLatest(\n      this.cachedPaths.map(pathCache => pathCache.run(timeDifference) || of(null)),\n    );\n  }\n}\n","import { tap } from 'rxjs/internal/operators/tap';\nimport { mapTo } from 'rxjs/operators';\nimport { cacheManager } from './cache-manager';\nimport { config } from './config';\nimport { queueRenderer } from './queue-renderer';\n\nexport interface CachedPathConfig {\n  path : string;\n  cacheDuration? : number;\n}\n\nexport class CachedPath {\n\n  private readonly cacheDurationMs : number;\n  private readonly path : string;\n  private countDown = 0;\n\n  constructor (\n    { path, cacheDuration } : CachedPathConfig,\n  ) {\n    this.cacheDurationMs = cacheDuration ? cacheDuration * 1000 : config.globalCacheDuration * 1000;\n    this.path            = path;\n\n    if (!this.path) {\n      throw new Error('Invalid path provided for cached path');\n    }\n  }\n\n  public run (timeDifference : number) {\n    if (!this.shouldRun(timeDifference)) {\n      return;\n    }\n\n    return queueRenderer.addToQueue(this)\n      .pipe(\n        tap(result => cacheManager.save(this.path, result)),\n        mapTo(null),\n      );\n  }\n\n  private shouldRun (timeDifference : number) {\n    this.countDown -= timeDifference;\n\n    if (this.countDown <= 0) {\n      this.countDown = this.cacheDurationMs;\n      return true;\n    }\n\n    return false;\n  }\n\n  public getUrl () {\n    return config.domain + this.path;\n  }\n}\n","import { browserManager } from 'phantom-crawler-server';\nimport { Browser } from 'phantom-crawler-server/lib/browser/Browser';\nimport { AsyncSubject, BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { of } from 'rxjs/internal/observable/of';\nimport { filter } from 'rxjs/internal/operators/filter';\nimport { tap } from 'rxjs/internal/operators/tap';\nimport { debounceTime, distinctUntilKeyChanged, flatMap, mapTo, shareReplay } from 'rxjs/operators';\nimport { config } from './config';\nimport { CachedPath } from './cached-path';\n\ninterface BrowserContainer {\n  job : CachedPath | null;\n  browser$ : Observable<Browser>;\n}\n\nexport class QueueRenderer {\n\n  private readonly queueSubject        = new BehaviorSubject<CachedPath[]>([]);\n  private readonly containerSubjects   = this.registerContainers();\n  private readonly cachedPathToSubject = new WeakMap<CachedPath, AsyncSubject<string>>();\n  private readonly subscriptions       = new Subscription();\n\n  addToQueue (cachedPath : CachedPath) : Observable<string> {\n    const existingSubject = this.cachedPathToSubject.get(cachedPath);\n\n    if (existingSubject) {\n      return existingSubject.asObservable();\n    }\n\n    const jobCompleteSubject = new AsyncSubject<string>();\n\n    this.cachedPathToSubject.set(cachedPath, jobCompleteSubject);\n    this.queueSubject.next([\n      ...this.queueSubject.value,\n      cachedPath,\n    ]);\n\n    return jobCompleteSubject.asObservable();\n  }\n\n  private registerContainers () {\n    const containerSubjects = Array.from(Array(config.totalBrowsers))\n      .map(() =>\n        new BehaviorSubject<BrowserContainer>({\n          browser$: browserManager.openNewInstance()\n            .pipe(shareReplay(1)),\n          job: null,\n        }),\n      );\n\n    containerSubjects.forEach(containerSubject => {\n      this.registerContainerJobListener(containerSubject);\n    });\n\n    const subscription = combineLatest([\n      this.queueSubject,\n      combineLatest(containerSubjects),\n    ])\n      .pipe(\n        debounceTime(0), // dont run the changes straight away\n      )\n      .subscribe(([, containers]) => {\n        containers.forEach((container, index) => this.tryCreateJob(container, index));\n      });\n\n    this.subscriptions.add(subscription);\n\n    return containerSubjects;\n  }\n\n  private registerContainerJobListener (containerSubject : BehaviorSubject<BrowserContainer>) : any {\n    this.subscriptions.add(containerSubject.pipe(\n      debounceTime(0),\n      distinctUntilKeyChanged('job'),\n      filter(({ job }) => job !== null),\n      flatMap(container => this.handleJob(container, containerSubject)),\n    )\n      .subscribe());\n  }\n\n  private tryCreateJob (\n    container : BrowserContainer,\n    index : number,\n  ) {\n    if (this.queueSubject.value.length === 0 || container.job) {\n      return;\n    }\n\n    const queue = [...this.queueSubject.value];\n    const job   = queue.shift();\n\n    if (!job) {\n      return;\n    }\n\n    this.queueSubject.next(queue);\n    this.containerSubjects[index].next({\n      ...container,\n      job,\n    });\n  }\n\n  private handleJob ({ job, browser$ } : BrowserContainer, containerSubject : BehaviorSubject<BrowserContainer>) {\n    if (!job) {\n      throw new Error('Expected job to be defined, in handling of job');\n    }\n\n    return browser$.pipe(\n      flatMap(browser => browser.activePage$),\n      flatMap(page => combineLatest([\n        page.open(job.getUrl()),\n        page.awaitPageLoad(),\n        of(page),\n      ])),\n      flatMap(([, , page]) => page.getContent()),\n      tap(content => {\n        const subject = this.cachedPathToSubject.get(job);\n\n        if (!subject) {\n          throw new Error('Unable to retrieve the subject from the cache map');\n        }\n\n        subject.next(content);\n        subject.complete();\n\n        // Complete the job so that it can move onto the next job\n        containerSubject.next({\n          ...containerSubject.value,\n          job: null,\n        });\n      }),\n      mapTo(null),\n    );\n  }\n}\n\nexport const queueRenderer = new QueueRenderer();\n","module.exports = require(\"phantom-crawler-server\");"],"sourceRoot":""}